{"version":3,"file":"ngx-plaid-link.js","sources":["ng://ngx-plaid-link/lib/ngx-plaid-link-handler.ts","ng://ngx-plaid-link/lib/ngx-plaid-link.service.ts","ng://ngx-plaid-link/lib/ngx-plaid-link-button.component.ts","ng://ngx-plaid-link/lib/ngx-plaid-link.directive.ts","ng://ngx-plaid-link/lib/ngx-plaid-link.module.ts","ng://ngx-plaid-link/public_api.ts","ng://ngx-plaid-link/ngx-plaid-link.ts"],"sourcesContent":["import { PlaidConfig } from './interfaces';\n\ndeclare let Plaid: any;\n\nexport class PlaidLinkHandler {\n\n  /**\n   * Holds the Plaid Link instance.\n   */\n  private plaidLink: any;\n\n  /**\n   * Constructor configures the Plaid Link handler with given config options.\n   * @param PlaidConfig config\n   */\n  constructor(config: PlaidConfig) {\n    this.plaidLink = Plaid.create(config);\n  }\n\n  /**\n   * Open the Plaid Link window for this handler.\n   * @param string institution The name of the institution to open\n   */\n  public open(institution?: string): void {\n    this.plaidLink.open(institution);\n  }\n\n  /**\n   * Closes the currently open Plaid Link window if any.\n   */\n  public exit(): void {\n    this.plaidLink.exit();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PlaidConfig } from './interfaces';\nimport { PlaidLinkHandler } from './ngx-plaid-link-handler';\n\n@Injectable()\nexport class NgxPlaidLinkService {\n\n  private loaded: Promise<void>;\n\n  constructor() { }\n\n  /**\n   * Create a Plaid Link instance as soon as Plaid Link has loaded.\n   * @param PlaidConfig config\n   * @returns Promise<PlaidLinkHandler>\n   */\n  public createPlaid(config: PlaidConfig): Promise<PlaidLinkHandler> {\n    return this.loadPlaid().then(() => {\n      return new PlaidLinkHandler(config);\n    });\n  }\n\n  /**\n   * Load or wait for the Plaid Link library to load.\n   * @returns Promise<void>\n   */\n  public loadPlaid(): Promise<void> {\n    if (!this.loaded) {\n      this.loaded = new Promise<void>((resolve, reject) => {\n        const script: any = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = 'https://cdn.plaid.com/link/v2/stable/link-initialize.js';\n        script.onerror = (e: any) => reject(e);\n        if (script.readyState) {\n          script.onreadystatechange = () => {\n            if (script.readyState === 'loaded' || script.readyState === 'complete') {\n              script.onreadystatechange = null;\n              resolve();\n            }\n          };\n        } else {\n          script.onload = () => {\n            resolve();\n          };\n        }\n        document.getElementsByTagName('body')[0].appendChild(script);\n      });\n    }\n\n    return this.loaded;\n  }\n\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { PlaidOnEventArgs, PlaidOnExitArgs, PlaidOnSuccessArgs } from './interfaces';\nimport { ICustomWindow } from './ngx-plaid-link.directive';\n\nfunction getWindow(): any {\n  return window;\n}\n\n@Component({\n  selector: \"mr-ngx-plaid-link-button\",\n  template: `\n    <button ngxPlaidLink\n            [class]=\"className\"\n            [ngStyle]=\"style\"\n            [publicKey]=\"publicKey\"\n            [clientName]=\"clientName\"\n            [apiVersion]=\"apiVersion\"\n            [env]=\"env\"\n            [institution]=\"institution\"\n            [product]=\"product\"\n            [selectAccount]=\"selectAccount\"\n            [token]=\"token\"\n            [webhook]=\"webhook\"\n            [countryCodes]=\"countryCodes\"\n            (Success)=\"onDirectiveSuccess($event)\"\n            (Exit)=\"onDirectiveExit($event)\"\n            (Load)=\"onDirectiveLoad($event)\"\n            (Event)=\"onDirectiveEvent($event)\"\n            (Click)=\"onDirectiveClick($event)\"\n    >\n      {{ buttonText }}\n    </button>\n  `,\n  styles: []\n})\nexport class NgxPlaidLinkButtonComponent {\n\n  @Input() clientName: string;\n  @Output() Event: EventEmitter<PlaidOnEventArgs> = new EventEmitter();\n  @Output() Success: EventEmitter<PlaidOnSuccessArgs> = new EventEmitter();\n  @Output() Click: EventEmitter<any> = new EventEmitter();\n  @Output() Load: EventEmitter<any> = new EventEmitter();\n  @Output() Exit: EventEmitter<PlaidOnExitArgs> = new EventEmitter();\n  private defaultProps = {\n    apiVersion: \"v2\",\n    env: \"sandbox\",\n    institution: null,\n    selectAccount: false,\n    token: null,\n    publicKey: null,\n    webhook: \"\",\n    product: [\"auth\"],\n    countryCodes: [\"US\"],\n    style: {\n      \"background-color\": \"#0085e4\",\n      \"transition-duration\": \"350ms\",\n      \"transition-property\": \"background-color, box-shadow\",\n      \"transition-timing-function\": \"ease-in-out\",\n      \"-webkit-appearance\": \"button\",\n      border: \"0\",\n      \"border-radius\": \"4px\",\n      \"box-shadow\":\n        \"0 2px 4px 0 rgba(0,0,0,0.1), inset 0 1px 0 0 rgba(255,255,255,0.1)\",\n      color: \"#fff\",\n      \"font-size\": \"20px\",\n      height: \"56px\",\n      outline: \"0\",\n      \"text-align\": \"center\",\n      \"text-transform\": \"none\",\n      padding: \"0 2em\",\n      cursor: \"pointer\"\n    },\n    buttonText: \"Log In To Your Bank Account\",\n    className: \"plaid-link-button\",\n  };\n  @Input() publicKey?: string = this.defaultProps.publicKey;\n  @Input() apiVersion?: string = this.defaultProps.apiVersion;\n  @Input() env?: string = this.defaultProps.env;\n  @Input() institution?: string = this.defaultProps.institution;\n  @Input() product?: Array<string> = this.defaultProps.product;\n  @Input() selectAccount?: boolean = this.defaultProps.selectAccount;\n  @Input() token?: string = this.defaultProps.token;\n  @Input() webhook?: string = this.defaultProps.webhook;\n  @Input() countryCodes?: string[] = this.defaultProps.countryCodes;\n  @Input() style?: any = this.defaultProps.style;\n  @Input() buttonText?: string = this.defaultProps.buttonText;\n  @Input() className?: string = this.defaultProps.className;\n\n  constructor() {}\n\n  get nativeWindow(): ICustomWindow {\n    return getWindow();\n  }\n\n  onScriptError() {\n    console.error(\"There was an issue loading the link-initialize.js script\");\n  }\n\n  onDirectiveSuccess(event: PlaidOnSuccessArgs) {\n    this.Success.emit(event);\n  }\n\n  onDirectiveExit(event: PlaidOnExitArgs) {\n    this.Exit.emit(event);\n  }\n\n  onDirectiveLoad(event) {\n    this.Load.emit(event);\n  }\n\n  onDirectiveEvent(event: PlaidOnEventArgs) {\n    this.Event.emit(event);\n  }\n\n  onDirectiveClick(event) {\n    this.Click.emit(event);\n  }\n}\n","import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\nimport { PlaidLinkHandler } from './ngx-plaid-link-handler';\nimport {\n  PlaidErrorMetadata,\n  PlaidErrorObject,\n  PlaidEventMetadata,\n  PlaidOnEventArgs,\n  PlaidOnExitArgs,\n  PlaidOnSuccessArgs,\n  PlaidSuccessMetadata\n} from './interfaces';\nimport { NgxPlaidLinkService } from './ngx-plaid-link.service';\n\nfunction getWindow(): any {\n  return window;\n}\n\nexport interface ICustomWindow extends Window {\n  Plaid: {\n    create: Function;\n  };\n}\n\n@Directive({\n  selector: '[ngxPlaidLink]'\n})\nexport class NgxPlaidLinkDirective {\n  @Output() Event: EventEmitter<PlaidOnEventArgs> = new EventEmitter();\n  @Output() Click: EventEmitter<any> = new EventEmitter();\n  @Output() Load: EventEmitter<any> = new EventEmitter();\n  @Output() Exit: EventEmitter<PlaidOnExitArgs> = new EventEmitter();\n  @Output() Success: EventEmitter<PlaidOnSuccessArgs> = new EventEmitter();\n\n  @Input() clientName: string;\n  \n\n  @HostBinding('disabled') disabledButton: boolean;\n\n  private plaidLinkHandler: PlaidLinkHandler;\n  private defaultProps = {\n    apiVersion: \"v2\",\n    env: \"sandbox\",\n    institution: null,\n    selectAccount: false,\n    publicKey: null,\n    token: null,\n    webhook: \"\",\n    product: [\"auth\"],\n    countryCodes: [\"US\"]\n  };\n\n  @Input() publicKey?: string = this.defaultProps.publicKey;\n  @Input() apiVersion?: string = this.defaultProps.apiVersion;\n  @Input() env?: string = this.defaultProps.env;\n  @Input() institution?: string = this.defaultProps.institution;\n  @Input() product?: Array<string> = this.defaultProps.product;\n  @Input() selectAccount?: boolean = this.defaultProps.selectAccount;\n  @Input() token?: string = this.defaultProps.token;\n  @Input() webhook?: string = this.defaultProps.webhook;\n  @Input() countryCodes?: string[] = this.defaultProps.countryCodes;\n\n  constructor(private plaidLinkLoader: NgxPlaidLinkService) {\n    this.disabledButton = true;\n  }\n\n  async ngOnInit() {\n    let handler: PlaidLinkHandler = await this.plaidLinkLoader\n      .createPlaid({\n        env: this.env,\n        key: this.publicKey,\n        product: this.product,\n        apiVersion: \"v2\",\n        clientName: this.clientName,\n        countryCodes: this.countryCodes,\n        onSuccess: (public_token, metadata) => this.onSuccess(public_token, metadata),\n        onExit: (err, metadata) => this.onExit(err, metadata),\n        onEvent: (eventName, metadata) => this.onEvent(eventName, metadata),\n        onLoad: () => this.onLoad(),\n        selectAccount: this.selectAccount,\n        token: this.token || null,\n        webhook: this.webhook || null\n      });\n    this.disabledButton = false;\n    this.plaidLinkHandler = handler;\n  }\n\n  public onExit(error: PlaidErrorObject, metadata: PlaidErrorMetadata) {\n    this.Exit.emit({error, metadata});\n  }\n\n  public onEvent(eventName: string, metadata: PlaidEventMetadata) {\n    this.Event.emit({eventName, metadata});\n  }\n\n  public onSuccess(token: string, metadata: PlaidSuccessMetadata) {\n    this.Success.emit({token, metadata});\n  }\n\n  @HostListener('click', ['$event'])\n  onClick($event) {\n    this.Click.emit($event);\n    // Open to a specific institution if necessary;\n    const institution = this.institution || null;\n    if (this.plaidLinkHandler) {\n      this.plaidLinkHandler.open(institution);\n    }\n  }\n\n  public onLoad($event = \"link_loaded\") {\n    this.Load.emit($event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxPlaidLinkButtonComponent } from './ngx-plaid-link-button.component';\nimport { NgxPlaidLinkService } from './ngx-plaid-link.service';\nimport { NgxPlaidLinkDirective } from './ngx-plaid-link.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    NgxPlaidLinkService\n  ],\n  declarations: [NgxPlaidLinkButtonComponent, NgxPlaidLinkDirective],\n  exports: [NgxPlaidLinkButtonComponent, NgxPlaidLinkDirective]\n})\nexport class NgxPlaidLinkModule { }\n","/*\n * Public API Surface of ngx-plaid-link\n */\n\nexport * from \"./lib/interfaces\";\nexport * from \"./lib/ngx-plaid-link.service\";\nexport * from \"./lib/ngx-plaid-link-button.component\";\nexport * from \"./lib/ngx-plaid-link.directive\";\nexport * from \"./lib/ngx-plaid-link.module\";\nexport * from \"./lib/ngx-plaid-link-handler\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["getWindow"],"mappings":"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"}